<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pdsu.csc.dao.UserInformationMapper">
  <cache type="com.pdsu.csc.cache.MybatisRedisCache"></cache>
  <resultMap id="BaseResultMap" type="com.pdsu.csc.bean.UserInformation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="clazz" jdbcType="VARCHAR" property="clazz" />
    <result column="time" jdbcType="CHAR" property="time" />
    <result column="account_status" jdbcType="INTEGER" property="accountStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, password, username, college, clazz, time, account_status
  </sql>
  <select id="selectByExample" parameterType="com.pdsu.csc.bean.UserInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from db_user_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from db_user_information
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from db_user_information
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pdsu.csc.bean.UserInformationExample">
    delete from db_user_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pdsu.csc.bean.UserInformation"
  	useGeneratedKeys="true" keyProperty="id">
    insert into db_user_information (id, uid, password, 
      username, college, clazz, 
      time, account_status)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, #{clazz,jdbcType=VARCHAR}, 
      #{time,jdbcType=CHAR}, #{accountStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pdsu.csc.bean.UserInformation"
  	useGeneratedKeys="true" keyProperty="id">
    insert into db_user_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="clazz != null">
        clazz,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=CHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pdsu.csc.bean.UserInformationExample" resultType="java.lang.Long">
    select count(*) from db_user_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update db_user_information
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.clazz != null">
        clazz = #{record.clazz,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=CHAR},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update db_user_information
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      clazz = #{record.clazz,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=CHAR},
      account_status = #{record.accountStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pdsu.csc.bean.UserInformation">
    update db_user_information
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        clazz = #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=CHAR},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pdsu.csc.bean.UserInformation">
    update db_user_information
    set uid = #{uid,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      clazz = #{clazz,jdbcType=VARCHAR},
      time = #{time,jdbcType=CHAR},
      account_status = #{accountStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectUsersByUids" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"></include>
  		from db_user_information 
  			<where>
				<foreach collection="uids" item="uid" separator="or">
					uid = #{uid}
				</foreach>  				
  			</where>
  </select>
  
  <select id="selectUserByUserName" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"></include>
  		from db_user_information
  			<where>
  				username = #{username}
  			</where>
  </select>
  
  <select id="selectUserByUid" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"></include>
  		from db_user_information
  			<where>
  				uid = #{uid}
  			</where>
  </select>
</mapper>
本项目虽采用了分布式的写法, 但由于权限认证在 provider 中完成。
导致的结果便为 provider 项目只允许有一个, 如存在多个则会导致,
有时认证成功, 有时认证失败的问题。

解决方案:
    1. 消息中间件, 持续保持数据共享。（大材小用，无意义。）
    2. 在 consumer 中进行认证, 通过对应参数进行 provider 中
        是否已登录的判断。（改动幅度巨大, 我懒得动了）
    3. 使用 zuul 路由, 在 zuul 中进行权限认证（同2）。
                        ——————
                                by 庞亚彬（半梦） 2020-12-12

最近有空就把这个坑给他填了吧.
初步考虑是，使用 zuul 路由进行权限认证，然后通过 shiro 内置的
认证请求头，携带用户认证信息，并通过 zuul 路由拦截器进行权限校
验，验证通过则通过 session 把用户信息传递到其余微服务中。
                        ——————
                                by 庞亚彬（半梦） 2021-02-20

已解决，目前已基本支持分布式的认证方式。
解决思路：
    1. 在 zuul 中进行用户的登录，登出，状态判断等相关逻辑。
    2. 在 zuul 转发请求时，如已登录，即 header 里包含相应的认证码，
       则添加认证码到新的 request，并从 shiro 中获取认证信息，加入
       到 redis 缓存中。
    3. 在 consumer 中接收到转发的请求，判断该 api 是否需要登录，如
       需要，则获取请求头中的认证码。通过认证码从 redis 中获取用户
       信息，并添加到 consumer 中的认证用户集合 map 里（为减轻 redis 压力，即第二次请求从 map 里直接拉取认证用户）。
    4. 在 consumer 中进行用户登录权限校验，如未登录则请求被打回，返回未登录相关提示。
    5. 如已登录，则通过 feign 转发请求致 provider，通过形参的方式，传递认证用户信息。
待解决问题：
    1. feign 的 api 调用传参无比的辣鸡
    2. feign POST 方法传递多个 POJO 会报错。
    3. feign GET 方法使用 @SpringQueryMap, 只可传递一个 POJO，多个会出现传值不完全的问题。
    4. 所有的 api 均需要进行可用性测试。
                        ——————
                                 by 庞亚彬（半梦） 2021-02-22

待解决问题:
	1. 所有的 api 均需要进行可用性测试。
						——————
								 by 庞亚彬（半梦） 2021-03-12